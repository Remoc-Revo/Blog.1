{/* 
    ORIGINAL PREVIEWS 
    FROM HERE
    COMMENTED FOR EXPERIMENTATION
*/}

{/*preview of article at the top of the page,
its image is the biggest
*/}     
{/* <div className="preview-big">
    {(articles.length!==0)
        ?<PreviewBig headline={decodeString(articles[0].articleHeadline)} time={moment(articles[0].articlePostingDate).fromNow()} 
                        briefDescription={decodeString(articles[0].articleBody)} imgUrl={articles[0].multimediaUrl} articleId={articles[0].articleId}/>
        :<span></span>
    }
</div>                    */}


{/* There being only two articles */}

{/* {(articles.length===2)
    ?<PreviewSmall headline={decodeString(articles[1].articleHeadline)} time={moment(articles[1].articlePostingDate).fromNow()} 
                    briefDescription={decodeString(articles[1].articleBody)} imgUrl={articles[1].multimediaUrl} articleId={articles[1].articleId}/>
    :<span></span>
}

{(articles.length>2)
    ?<div className="row preview-mid-container " style={{margin:"0px"}}>
        <PreviewMid headline={decodeString(articles[1].articleHeadline)} time={moment(articles[1].articlePostingDate).fromNow()}
                    briefDescription={decodeString(articles[1].articleBody)} imgUrl={articles[1].multimediaUrl} articleId={articles[1].articleId}/>
        <PreviewMid headline={decodeString(articles[2].articleHeadline)} time={moment(articles[2].articlePostingDate).fromNow()}
                    briefDescription={decodeString(articles[2].articleBody)} imgUrl={articles[2].multimediaUrl} articleId={articles[2].articleId}/>
    </div> 
    :<span></span>
} */}


{/* {(articles.length>3)
    ?<div className="preview-small-container mt-4">
        {
            articles.map((article,index)=>{
                if(index === articles.length-1 && index >=4){
                    return <div className="container" ref={lastArticleRef} id={article.articleId} key={article.articleId}>
                            <PreviewSmall headline={decodeString(article.articleHeadline)} time={moment(article.articlePostingDate).fromNow()} 
                                        briefDescription={decodeString(article.articleBody)} imgUrl={article.multimediaUrl} articleId={article.articleId}
                                        />
                            <hr/>
                        </div>
                }
                else if(index>2){
                    return <div className="container" key={article.articleId}>
                            <PreviewSmall headline={decodeString(article.articleHeadline)} time={moment(article.articlePostingDate).fromNow()} 
                                            briefDescription={decodeString(article.articleBody)} imgUrl={article.multimediaUrl} articleId={article.articleId}/>
                            <hr/>
                        </div>
                }
                else{
                    return <></>
                }
            })
        }
    </div> 
    :<span></span>
} */}


 <Dropdown isOpen={dropdownOpen} toggle={toggle_dropdown} className=" me-2">
                        <Dropdown.Toggle className="btn btn-light btn-user rounded-circle dropdown-toggle" noCaret style={{backgroundColor:``}}>
                          {
                          // (profileImg!==undefined)
                          //     ?<img src={require(`../../public/uploads/${profileImg}`)} style={{width:"40px"}}/>
                          //     :userName[0]
                          <FontAwesomeIcon icon={faUser} />

                          }
                        </Dropdown.Toggle>

                        <Dropdown.Menu className=" position-absolute translate-middle-x" id="user-dropdown-menu">
                          <div className="container">
                            <Dropdown.Item>                              
                              <Button className="btn btn-lg rounded-circle">
                                {decodeURIComponent(parse(userName[0]))}
                              </Button>        
                            </Dropdown.Item>
                            
                            {/* <Dropdown.Item className=" " href="/profile"> 
                              <div className="d-flex justify-content-between mb-0 pb-0">
                                <p className="me-4">{decodeURIComponent(parse(userName))}</p>
                                <p>&gt;</p>
                              </div>
                            </Dropdown.Item> */}

                            <Dropdown.Item><Button className="btn btn-light" onClick={logout}>Logout</Button></Dropdown.Item>
                          </div>
                          
                        </Dropdown.Menu>
                      </Dropdown>