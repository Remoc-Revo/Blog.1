{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{Modal}from\"react-bootstrap\";// import { useUserContext } from \"../userContext\";\nimport api from\"../config/api\";import{useParams}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ResetPassword(){const navigate=useNavigate();const[email,set_email]=useState();const[newPassword,setNewPassword]=useState();const[passwordConfirm,setPasswordConfirm]=useState();const[errorMessage,setErrorMessage]=useState();const{resetToken}=useParams();const[isValidating,setIsValidating]=useState(false);const[showSuccessModal,setShowSuccesModal]=useState(false);const[successMessage,setSuccessMessage]=useState();// const {user,contextLogin} = useUserContext();\nfunction requestPasswordReset(e){e.preventDefault();setErrorMessage();setIsValidating(true);api.post('/requestPasswordReset',{withCredentials:true,email:email}).then(response=>{setIsValidating(false);if(response&&response.status===200){setSuccessMessage(\"A password reset link has been sent to your email. Please check your spam folder if you don't see it in your inbox.\");setShowSuccesModal(true);}}).catch(err=>{setIsValidating(false);// document.write(err)\nif(err.response&&err.response.status===401){setErrorMessage(\"Entered email is not registered\");}});}function validationErrors(){var errorBuffer='';if(newPassword.length<4){errorBuffer+=\"*Password must have at least 4 characters\";}if(newPassword!==passwordConfirm){errorBuffer+=\"*Passwords don't match \";}const emailRegex=/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;if(!emailRegex.test(email)){errorBuffer+=\" *Invalid email\";}setErrorMessage(errorBuffer);return errorBuffer;}const resetPassword=e=>{e.preventDefault();if(validationErrors().length===0){setIsValidating(true);api.post(\"/resetPassword\",{email:email,password:newPassword,resetToken:resetToken,withCredentials:true}).then(response=>{setIsValidating(false);if(response&&response.status===201){setSuccessMessage('Password reset successful!');setShowSuccesModal(true);}}).catch(err=>{setIsValidating(false);// document.write(\"the error:   \",err);\nif(err.response.status===401){// document.write(err)\nsetErrorMessage(err.response.data.errors);}});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-page \",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"auth-form\",className:\"d-flex flex-column\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center\",children:/*#__PURE__*/_jsx(\"img\",{class:\"\",src:require(\"../logos/logo.png\"),style:{width:\"48%\"},alt:\"\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:requestPasswordReset,children:[/*#__PURE__*/_jsx(\"input\",{className:\"col-md-12\",type:\"text\",name:\"email\",placeholder:\"email\",required:true,value:email,onChange:e=>{set_email(e.target.value);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(resetToken==='null'?'d-none':''),children:[/*#__PURE__*/_jsx(\"input\",{className:\"col-md-12\",type:\"password\",name:\"password\",placeholder:\"new password\",required:true,value:newPassword,onChange:e=>{setNewPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{className:\"col-md-12\",type:\"password\",name:\"password\",placeholder:\"confirm password\",required:true,value:passwordConfirm,onChange:e=>{setPasswordConfirm(e.target.value);}})]}),/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:errorMessage}),resetToken==='null'?/*#__PURE__*/_jsx(\"button\",{className:\"col-md-12 btn-submit\",id:\"\",type:\"submit\",onClick:requestPasswordReset,children:isValidating?/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-white\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Validating...\"})}):/*#__PURE__*/_jsx(\"span\",{children:\"Submit\"})}):/*#__PURE__*/_jsx(\"button\",{className:\"col-md-12 btn-submit\",id:\"\",type:\"submit\",onClick:resetPassword,children:isValidating?/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-white\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Validating...\"})}):/*#__PURE__*/_jsx(\"span\",{children:\"Change Password\"})})]})]}),/*#__PURE__*/_jsx(Modal,{show:showSuccessModal,centered:true,children:/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(\"div\",{className:\" d-flex flex-column justify-content-center\",children:[/*#__PURE__*/_jsx(\"p\",{children:successMessage}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\" col-12 btn btn-light\",onClick:()=>{setShowSuccesModal(false);navigate(\"/login\");},children:\"Okay\"})})]})})})]});}","map":{"version":3,"names":["React","useState","useNavigate","Modal","api","useParams","jsx","_jsx","jsxs","_jsxs","ResetPassword","navigate","email","set_email","newPassword","setNewPassword","passwordConfirm","setPasswordConfirm","errorMessage","setErrorMessage","resetToken","isValidating","setIsValidating","showSuccessModal","setShowSuccesModal","successMessage","setSuccessMessage","requestPasswordReset","e","preventDefault","post","withCredentials","then","response","status","catch","err","validationErrors","errorBuffer","length","emailRegex","test","resetPassword","password","data","errors","className","children","id","class","src","require","style","width","alt","onSubmit","type","name","placeholder","required","value","onChange","target","concat","color","onClick","show","centered","Body"],"sources":["/home/remoc-revo/Desktop/git_repo/Blog.1/client/src/pages/resetPassword.jsx"],"sourcesContent":["import React,{useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Modal } from \"react-bootstrap\";\n// import { useUserContext } from \"../userContext\";\nimport api from \"../config/api\";\nimport { useParams } from \"react-router-dom\";\n\n\nexport default function ResetPassword(){\n   const navigate=useNavigate();\n   const [email,set_email]=useState();\n   const [newPassword,setNewPassword]=useState();\n   const [passwordConfirm,setPasswordConfirm]=useState();\n   const [errorMessage,setErrorMessage]=useState();\n   const {resetToken} = useParams();\n   const [isValidating, setIsValidating] = useState(false);\n   const [showSuccessModal, setShowSuccesModal] = useState(false);\n   const [successMessage, setSuccessMessage] = useState();\n   // const {user,contextLogin} = useUserContext();\n\n\n   function requestPasswordReset(e){\n       e.preventDefault();\n       setErrorMessage();\n       setIsValidating(true);\n\n       api.post('/requestPasswordReset',\n           {\n               withCredentials:true,\n               email:email,\n           })\n           .then((response)=>{\n               setIsValidating(false);\n               if(response && response.status===200){\n                   setSuccessMessage(`A password reset link has been sent to your email. Please check your spam folder if you don't see it in your inbox.`);\n                   setShowSuccesModal(true);\n               }\n           })\n           .catch((err)=>{\n               setIsValidating(false);\n               // document.write(err)\n               if(err.response && err.response.status===401){\n                   setErrorMessage(\"Entered email is not registered\")\n               }\n           });\n   }\n\n\n   function validationErrors(){\n       var errorBuffer='';\n\n       if(newPassword.length<4){\n           errorBuffer+= \"*Password must have at least 4 characters\";\n\n       }\n       if(newPassword!==passwordConfirm){\n           errorBuffer+= \"*Passwords don't match \";\n        }\n\n       const emailRegex=/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n       if(!emailRegex.test(email)){\n           errorBuffer+= \" *Invalid email\"\n       }\n      \n       setErrorMessage(errorBuffer);\n       return errorBuffer;\n   }\n\n   const resetPassword=(e)=>{\n       e.preventDefault();\n       if(validationErrors().length===0){\n           setIsValidating(true);\n\n               api.post(\"/resetPassword\",\n                   {\n                       email:email,\n                       password:newPassword,\n                       resetToken:resetToken,\n                       withCredentials:true\n                   }\n                   ).then((response)=>{\n                           setIsValidating(false);                            \n                           if(response && response.status===201){\n                               setSuccessMessage('Password reset successful!');\n                               setShowSuccesModal(true);\n                           }\n                   })\n               .catch((err)=>{\n                   setIsValidating(false);\n               // document.write(\"the error:   \",err);\n\n                   if(err.response.status===401){\n                       // document.write(err)\n                       setErrorMessage(err.response.data.errors);                    \n                   }\n               });\n       }\n      \n   }\n\n\n   return(\n       <div className=\"auth-page \">\n\n           <div id=\"auth-form\" className=\"d-flex flex-column\">\n               <div className=\"d-flex justify-content-center\">\n                   <img class=\"\" src={require(\"../logos/logo.png\")} style={{width:\"48%\"}} alt=\"\"/>\n                   \n               </div>\n               <form onSubmit={requestPasswordReset} >\n                 \n                       <input className=\"col-md-12\" type=\"text\" name=\"email\" placeholder=\"email\" required\n                               value={email} onChange={(e)=>{set_email(e.target.value)}}\n                       />\n\n                       \n                       <div className={`${resetToken === 'null' ? 'd-none': ''}`}>\n                           <input className=\"col-md-12\" type=\"password\" name=\"password\" placeholder=\"new password\" required\n                               value={newPassword} onChange={(e)=>{setNewPassword(e.target.value)}}\n                           />\n\n                           <input className=\"col-md-12\" type=\"password\" name=\"password\" placeholder=\"confirm password\" required\n                               value={passwordConfirm} onChange={(e)=>{setPasswordConfirm(e.target.value)}}\n                           />\n                       </div>\n                       \n                   \n                   <p style={{color:\"red\"}}>{errorMessage}</p>\n\n                   {\n                       resetToken === 'null'\n                       ?<button className=\"col-md-12 btn-submit\" id=\"\" type=\"submit\" onClick={requestPasswordReset}>\n                           {isValidating\n                               ?<div className=\"spinner-border text-white\">\n                                   <span className=\"sr-only\">Validating...</span>\n                               </div>\n                               :<span>Submit</span>\n                           }\n                       </button>\n                       :<button className=\"col-md-12 btn-submit\" id=\"\" type=\"submit\" onClick={resetPassword}>\n                            {isValidating\n                               ?<div className=\"spinner-border text-white\">\n                                   <span className=\"sr-only\">Validating...</span>\n                               </div>\n                               :<span>Change Password</span>\n                           }\n                       </button>\n                   }\n                   \n\n                   \n               </form>\n           </div>\n\n           <Modal show={showSuccessModal} centered>\n                   <Modal.Body>\n                       <div className=\" d-flex flex-column justify-content-center\">\n                           <p>{successMessage}</p>\n                           <div>\n                               <button className=\" col-12 btn btn-light\" \n                                   onClick={()=>{\n                                       setShowSuccesModal(false);\n                                       navigate(\"/login\");\n                                   }}>\n                                   Okay\n                               </button>\n                           </div>\n                       </div>\n                   </Modal.Body>\n           </Modal>\n       </div>\n       \n   )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}