{"ast":null,"code":"var _jsxFileName = \"/home/remoc-revo/Desktop/git_repo/Blog.1/client/src/pages/articleUpdating.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport '../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { UseUserContext } from \"../userContext\";\nimport api from \"../config/api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faBarsStaggered, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { Modal } from \"react-bootstrap\";\nimport { transformImage } from \"../reusables/getImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ArticlesUpdating() {\n  _s();\n  const navigate = useNavigate();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  var [articleSectionId, setArticleSectionId] = useState(27); // default id for uncategoried sections, ensure it's changed\n  var [articleHeadline, setArticleHeadline] = useState('');\n  var [articleToUpdateLoaded, setArticleToUpdateLoaded] = useState(false);\n  const {\n    loading,\n    user\n  } = UseUserContext();\n  let {\n    articleIdToUpdate\n  } = useParams();\n  const [articleToUpdate, setArticleToUpdate] = useState(null);\n  const [awaitingResponse, setAwaitingResponse] = useState(false);\n  const [isDraft, setIsdraft] = useState();\n  const [articleSections, setArticleSections] = useState([]);\n  const [isAddingNewCategory, setIsAddingNewCategory] = useState(false);\n  const [newCategory, setNewCategory] = useState(\"\");\n  const [isSidePanelVisible, setIsSidePanelVisible] = useState(true);\n  const [showSessionEndedModal, setShowSessionEndedModal] = useState(false);\n  const [isAutoSaving, setIsAutoSaving] = useState(true);\n  const [userProfilePhoto, setUserProfilePhoto] = useState(null);\n  const queryParams = new URLSearchParams(useLocation().search);\n  const isRecoverDraft = queryParams.get('recover');\n  const [Editor, setEditor] = useState(null);\n  useEffect(() => {\n    import('react-draft-wysiwyg').then(module => {\n      setEditor(() => module.Editor);\n    });\n  }, []);\n  const resizeImages = useCallback(contentState => {\n    const images = extractImagesFromContent(contentState);\n    let updatedContentState = contentState;\n    for (var imageSrc of images) {\n      // Replace image in content with the resized image\n      updatedContentState = replaceImageInContent(updatedContentState, imageSrc, imageSrc, '400px');\n    }\n    return updatedContentState;\n  }, []);\n  function fetchArticleToUpdate() {\n    api.get(`/single/${articleIdToUpdate}`).then(response => {\n      console.log(\"fetched articleToBeUpdated::\", response);\n      setArticleToUpdate(response.data.article[0]);\n      setArticleSectionId(articleToUpdate.articleSectionId);\n      setArticleHeadline(decodeURIComponent(articleToUpdate.articleHeadline));\n      setIsdraft(articleToUpdate.articleIsDraft);\n      const fetchedArticleBody = response.data.article[0].articleBody;\n      const parsedArticleBody = JSON.parse(fetchedArticleBody);\n      const articleBodyContentState = convertFromRaw(parsedArticleBody);\n      const bodyWithResizedImages = resizeImages(articleBodyContentState);\n      setEditorState(EditorState.createWithContent(bodyWithResizedImages));\n      setArticleToUpdateLoaded(true);\n    }).catch(err => {\n      console.log(\"get single article error\", err);\n    });\n  }\n  useEffect(() => {\n    if (articleIdToUpdate !== 'null' && !articleToUpdateLoaded && isRecoverDraft !== 'true') {\n      console.log(\"articleToUpdate not nulll\");\n      fetchArticleToUpdate();\n    }\n  });\n\n  // useEffect(()=>{\n  //     const autoSaveToServer = ()=>{\n  //         if(!isEditorStateEmpty(editorState) \n  //             && articleHeadline !== '' \n  //             && user !== 'unauthorized')\n  //         { \n  //             console.log(\"Saviing draft again..\", new Date().getSeconds())\n  //             handleSubmit(null, true);\n\n  //             const rawContentState = convertToRaw(editorState.getCurrentContent())\n  //             const serializedContent = JSON.stringify(rawContentState);\n  //             setArticleToUpdate({\n  //                 ...articleToUpdate,\n  //                 articleBody: serializedContent,\n  //                 articleHeadline: articleHeadline,\n  //                 articleSectionId: articleSectionId\n  //             });\n\n  //             console.log(\"The article to update some time in future:\", articleToUpdate)\n  //         }\n  //     }\n\n  //     const intervalId = setInterval(autoSaveToServer, 10000);\n\n  //     return  ()=> clearInterval(intervalId);\n  // })\n\n  // auto saving to local storage\n  useEffect(() => {\n    const autoSaveToLocalStorage = () => {\n      const rawContentState = convertToRaw(editorState.getCurrentContent());\n      const serializedContent = JSON.stringify(rawContentState);\n      let draft = {\n        articleId: articleIdToUpdate,\n        articleHeadline: articleHeadline,\n        articleBody: serializedContent,\n        articleSectionId: articleSectionId\n      };\n      draft = JSON.stringify(draft);\n      localStorage.setItem('draft', draft);\n    };\n    const intervalId = setInterval(autoSaveToLocalStorage, 100);\n    return () => clearInterval(intervalId);\n  }, [articleHeadline, editorState, articleIdToUpdate, articleSectionId]);\n\n  //recover draft from storage\n  useEffect(() => {\n    if (isRecoverDraft && isRecoverDraft === 'true') {\n      let storedDraft = localStorage.getItem('draft');\n      storedDraft = JSON.parse(storedDraft);\n      setArticleToUpdate(storedDraft);\n      let storedArticleBody = JSON.parse(storedDraft.articleBody);\n      const articleBodyContentState = convertFromRaw(storedArticleBody);\n      const bodyWithResizedImages = resizeImages(articleBodyContentState);\n      setEditorState(EditorState.createWithContent(bodyWithResizedImages));\n      setArticleHeadline(storedDraft.articleHeadline);\n      setArticleSectionId(storedDraft.articleSectionId);\n    }\n  }, [isRecoverDraft, resizeImages]);\n  useEffect(() => {\n    function handleWindowResize() {\n      const newWidth = window.innerWidth;\n      if (newWidth < 1200) {\n        setIsSidePanelVisible(false);\n      } else {\n        setIsSidePanelVisible(true);\n      }\n    }\n    handleWindowResize();\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  // const isEditorStateEmpty = (editorState)=>{\n  //     const contentState = editorState.getCurrentContent();\n  //     const rawContent = convertToRaw(contentState);\n  //     const blocks  = rawContent.blocks;\n\n  //     return blocks.every(block =>{\n  //         const isEmptyText = !block.text.trim();\n  //         const hasNoEntities = block.entityRanges.length === 0;\n  //         return isEmptyText && hasNoEntities;\n  //     });\n  // }\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n  const uploadImageToEditor = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        resolve({\n          data: {\n            link: reader.result\n          }\n        });\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  const fetchSections = useCallback(async () => {\n    await api.get('/sections').then(response => {\n      setArticleSections(response.data.sections);\n    }).catch(err => {\n      console.log(\"error fetching sections\", err);\n    });\n  }, []);\n  useEffect(() => {\n    if (!loading && user != null) {\n      if (user.userLevel !== 1) {\n        console.log(\"user current state: \", user);\n        navigate(-1, {\n          replace: true\n        });\n      }\n      setUserProfilePhoto(user.userProfilePhoto);\n      fetchSections();\n    }\n  }, [loading, navigate, user, articleToUpdate, articleToUpdateLoaded, fetchSections]);\n  async function uploadImageToCloud(imageSrc) {\n    console.log(\"uplading to cloud called\");\n    if (imageSrc === null) {\n      return null;\n    }\n    var formData = new FormData();\n    formData.append('file', imageSrc);\n    formData.append('upload_preset', process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET);\n    console.log(\"the file\", formData);\n    try {\n      const res = await fetch(`https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD__NAME}/image/upload/`, {\n        method: \"post\",\n        body: formData\n      });\n      if (res.ok) {\n        let data;\n        data = await res.json();\n        if (data !== undefined) {\n          console.log(\"\\n secure_url\", data.secure_url);\n          return data.secure_url;\n        }\n      }\n    } catch (err) {\n      console.log(\"file upload err\", err);\n    }\n  }\n  const replaceImageInContent = (contentState, oldSrc, newSrc, newHeight) => {\n    let newContentState = contentState;\n    const blockMap = newContentState.getBlockMap();\n    blockMap.forEach(block => {\n      block.findEntityRanges(character => {\n        const entityKey = character.getEntity();\n        return entityKey !== null && newContentState.getEntity(entityKey).getType() === 'IMAGE';\n      }, (start, end) => {\n        const entityKey = block.getEntityAt(start);\n        const entity = newContentState.getEntity(entityKey);\n        const {\n          src\n        } = entity.getData();\n        if (src === oldSrc) {\n          newContentState = newContentState.replaceEntityData(entityKey, {\n            src: newSrc,\n            height: newHeight,\n            width: '600px',\n            alignment: 'left'\n          });\n        }\n      });\n    });\n    return newContentState;\n  };\n  const extractImagesFromContent = contentState => {\n    const contentBlocks = contentState.getBlocksAsArray();\n    let images = [];\n    contentBlocks.forEach(block => {\n      block.findEntityRanges(character => {\n        const entityKey = character.getEntity();\n        return entityKey !== null && contentState.getEntity(entityKey).getType() === 'IMAGE';\n      }, (start, end) => {\n        const entityKey = block.getEntityAt(start);\n        const entity = contentState.getEntity(entityKey);\n        const {\n          src\n        } = entity.getData();\n        console.log(\"gotten src:\", src, \"the entity type:\", entity.getType(), \"the entity data:\", entity.getData().url);\n        images.push(src);\n      });\n    });\n    return images;\n  };\n  function prepareArticleExcerpt() {\n    const contentState = editorState.getCurrentContent();\n    const rawContentState = convertToRaw(contentState);\n    const rawContentBlocks = rawContentState.blocks;\n    const allImages = extractImagesFromContent(contentState);\n    let firstImage = allImages.length > 0 ? allImages[0] : null;\n    let firstParagraph = null;\n    let htmlContent = '';\n    for (let block of rawContentBlocks) {\n      if (block.text && block.text.trim().length > 0) {\n        firstParagraph = block.text;\n        break;\n      }\n    }\n    if (firstImage !== null) {\n      htmlContent += `<div id=\"previewImageContainer\" style=\"width: 100%; height: 300px;\">\n                               <img src=\"${firstImage}\" alt=\"\" style=\"width:100%; height:100%; object-fit: cover;\"/>\n                           </div>    \n                           `;\n    }\n    if (firstParagraph !== null) {\n      htmlContent += `<p>${firstParagraph}</p>`;\n    }\n    console.log(\"combined html content\", htmlContent);\n    return htmlContent;\n  }\n  function calculateReadTime() {\n    const rawContent = convertToRaw(editorState.getCurrentContent());\n    const blocks = rawContent.blocks;\n    const textContent = blocks.map(block => block.text).join(' ');\n    const wordCount = textContent.trim().split(/\\s+/).length;\n    const wordsPerMinute = 200;\n    const readTimeInMinutes = Math.ceil(wordCount / wordsPerMinute);\n    return readTimeInMinutes;\n  }\n  async function addArticle(articleBody, submitAsDraft) {\n    let articleExcerpt = prepareArticleExcerpt();\n    const readTimeInMinutes = calculateReadTime();\n    console.log(\"encodeURIComponent:\", encodeURI(articleBody).replace(\"'\", \"&apos;\"));\n    console.log(articleBody, \"\\n\", articleHeadline, \"\\n\", articleSectionId, \"\\n\" /*articlePhoto.name.replace(/ /g,\"_\")*/);\n    let imgUrl = null;\n    imgUrl = await uploadImageToCloud();\n    console.log(\"imgUrl\", imgUrl);\n    await api.post('/addArticle', {\n      headers: {\n        'content-type': 'application/json'\n      },\n      articleSectionId: articleSectionId,\n      articleHeadline: encodeURIComponent(articleHeadline).replace(/'/g, \"&apos;\"),\n      articleBody: articleBody,\n      //encodeURIComponent(articleBody).replace(/'/g,\"&apos;\"),\n      withCredentials: true,\n      img: imgUrl,\n      isDraft: submitAsDraft,\n      articleExcerpt: articleExcerpt,\n      readTimeInMinutes: readTimeInMinutes\n    }).then(response => {\n      if (response && response.status === 200) {\n        const articleId = response.data.articleId;\n        setAwaitingResponse(false);\n        navigate(`/articlePosting/${articleId}`, {\n          replace: true\n        });\n        localStorage.removeItem('draft');\n      }\n    }).catch(err => {\n      console.log(err);\n      if (err.response && err.response.status === 401) {\n        setAwaitingResponse(false);\n        setShowSessionEndedModal(true);\n      }\n    });\n  }\n  async function updateArticle(articleBody, submitAsDraft) {\n    let articleExcerpt = prepareArticleExcerpt();\n    const readTimeInMinutes = calculateReadTime();\n    let imgUrl = null;\n    let prevImg;\n    console.log(\"editor state\", editorState);\n    await api.post('/updateArticle', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true,\n      articleId: articleToUpdate.articleId,\n      articleSectionId: articleSectionId,\n      articleHeadline: encodeURIComponent(articleHeadline).replace(/'/g, \"&apos;\"),\n      articleBody: articleBody,\n      img: imgUrl,\n      prevImg: prevImg,\n      isDraft: submitAsDraft,\n      articleExcerpt: articleExcerpt,\n      readTimeInMinutes: readTimeInMinutes\n    }).then(response => {\n      if (response && response.status === 200) {\n        setAwaitingResponse(false);\n        localStorage.removeItem('draft');\n        if (!isAutoSaving) fetchArticleToUpdate();\n      }\n    }).catch(err => {\n      console.log(err);\n      if (err.response && err.response.status === 401) {\n        setAwaitingResponse(false);\n        setShowSessionEndedModal(true);\n      }\n    });\n  }\n\n  /*\n      function handleSubmit : extract images, call image upload, call update or add article\n       params: e - submit Event\n              submitAsDraft              \n   */\n  async function handleSubmit(e, submitAsDraft) {\n    if (e) e.preventDefault();\n\n    // Extract images from editor content\n    const contentState = editorState.getCurrentContent();\n    const images = extractImagesFromContent(contentState);\n\n    //When Editing an already saved article\n    let previousImages = [];\n    if (articleIdToUpdate !== 'null') {\n      console.log(typeof articleToUpdate, \" article itself\", articleToUpdate.articleBody);\n      const uneditedArticleBody = articleToUpdate.articleBody;\n      const parsedUneditedArticleBody = JSON.parse(uneditedArticleBody);\n      const articleBodyContentState = convertFromRaw(parsedUneditedArticleBody);\n      previousImages = extractImagesFromContent(articleBodyContentState);\n    }\n\n    // Upload each image and replace in content with URL\n    const uploadedUrls = await Promise.all(images.map(async imageSrc => {\n      if (previousImages.includes(imageSrc)) {\n        console.log(\"image saved already\");\n        return null;\n      }\n\n      //upload image  \n      const imageUrl = await uploadImageToCloud(imageSrc);\n      const tranformedImageUrl = transformImage(imageUrl);\n\n      // Replace image in content with the uploaded URL\n      const newContentState = replaceImageInContent(contentState, imageSrc, tranformedImageUrl);\n      setEditorState(EditorState.createWithContent(newContentState));\n      return imageUrl;\n    }));\n    console.log(\"Uploaded urls\", uploadedUrls);\n    const rawContentState = convertToRaw(editorState.getCurrentContent());\n    const serializedContent = JSON.stringify(rawContentState);\n    console.log(\"Article body: \", serializedContent);\n    if (articleToUpdate == null) {\n      addArticle(serializedContent, submitAsDraft);\n    } else {\n      updateArticle(serializedContent, submitAsDraft);\n    }\n  }\n  async function addNewSection() {\n    if (newCategory !== \"\") {\n      await api.post('/addSection', {\n        sectionName: newCategory\n      }).then(response => {\n        setArticleSectionId(response.data.sectionId);\n        setNewCategory(\"\");\n        setIsAddingNewCategory(false);\n        fetchSections();\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black m-0  p-1 ps-1 pe-1 ps-md-3 pe-md-4  top-0 w-100 position-fixed\",\n      id: \"writing-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            navigate('/');\n          },\n          className: \"btn d-flex gap-2 align-items-center ms-xl-3\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faChevronLeft,\n            className: \"admin-nav-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white\",\n            children: \"My home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end align-items-center gap-2 gap-md-3 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'lightgrey',\n              width: \"24px\",\n              height: \"24px\"\n            },\n            className: \"d-flex justify-content-center align-items-center rounded-circle overflow-hidden\",\n            onClick: e => {\n              e.stopPropagation();\n              navigate('/profile');\n            },\n            children: userProfilePhoto !== null ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: userProfilePhoto,\n              alt: \"\",\n              className: \"w-100 h-100 object-fit-cover rounded-circle\",\n              style: {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUser,\n              className: \"ic-white w-100 h-100 pt-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn d-flex\",\n            onClick: () => {\n              setIsSidePanelVisible(!isSidePanelVisible);\n            },\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faBarsStaggered,\n              className: \"admin-nav-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"writing-nav-spacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"article-update\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        encType: \"multipart/form-data\",\n        className: \"mb-5 \",\n        id: \"article-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-xl-9  d-lg-flex justify-content-start`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-10 m-xl-0 ms-4 me-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex mt-3 mt-sm-0\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"articleHeadline\",\n                className: \"w-100 border-0\",\n                id: \"title-input\",\n                placeholder: \"Add title...\",\n                minLength: \"2\",\n                required: true,\n                value: articleHeadline,\n                onChange: e => setArticleHeadline(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 28\n            }, this), Editor !== null && /*#__PURE__*/_jsxDEV(Editor, {\n              editorState: editorState,\n              onEditorStateChange: onEditorStateChange,\n              toolbarClassName: \"toolbar col-xl-8 me-xl-5 me-3\",\n              wrapperClassName: \"wrapper-class \",\n              editorClassName: \"editor \",\n              placeholder: \"Type your content here or add images...\",\n              toolbar: {\n                image: {\n                  uploadCallback: uploadImageToEditor,\n                  alignmentEnabled: true,\n                  previewImage: true,\n                  alt: {\n                    present: true,\n                    mandatory: false\n                  },\n                  defaultSize: {\n                    height: '350px',\n                    width: '400px'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `menu ${isSidePanelVisible ? \"\" : \" d-none\"}`,\n          id: \"writing-side-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" border p-3 mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"d-block pb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Status: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 32\n              }, this), articleToUpdate !== null && !isDraft ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Published\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 38\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Draft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"d-block pb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Visibility: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 32\n              }, this), articleToUpdate !== null && !isDraft ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Public\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 38\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Private\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex gap-2  align-items-center justify-content-between mt-1\",\n              children: [awaitingResponse && isDraft ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner-border text-info\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sr-only\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-8\",\n                id: \"save-draft\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn border\",\n                  type: \"submit\",\n                  onClick: e => {\n                    setIsdraft(true);\n                    setAwaitingResponse(true);\n                    setIsAutoSaving(false);\n                    handleSubmit(e, true);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Save as a draft\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 44\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"\",\n                children: awaitingResponse && !isDraft ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"spinner-border text-info col-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sr-only\",\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-light col-12\",\n                  id: \"publish-btn\",\n                  type: \"submit\",\n                  onClick: e => {\n                    setIsdraft(false);\n                    setAwaitingResponse(true);\n                    setIsAutoSaving(false);\n                    handleSubmit(e, false);\n                  },\n                  children: \"Publish\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-3 d-flex flex-column\",\n            id: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              id: \"available-categories\",\n              children: articleSections.map((section, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"section pb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    required: true,\n                    checked: section.sectionId === parseInt(articleSectionId, 10),\n                    name: \"section\",\n                    value: section.sectionId,\n                    id: section.sectionId,\n                    onChange: e => {\n                      setArticleSectionId(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 40\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: section.sectionId,\n                    children: section.sectionName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 40\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 43\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"add-category\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-link p-0 mb-3\",\n                id: \"new-category-btn\",\n                type: \"button\",\n                onClick: () => {\n                  setIsAddingNewCategory(true);\n                },\n                children: \"Add New Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 32\n              }, this), isAddingNewCategory ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-column gap-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"newCategory\",\n                  className: \"w-100 form-control\",\n                  placeholder: \"New Category name\",\n                  minlength: \"\",\n                  maxlength: \"200\",\n                  value: newCategory,\n                  onChange: e => setNewCategory(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 40\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: newCategory === \"\" ? \"btn btn-light\" : \"btn-ready\",\n                  type: \"button\",\n                  id: \"add-category-btn\",\n                  onClick: addNewSection,\n                  children: \"Add new category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 37\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSessionEndedModal,\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" Your Session has expired!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-light\",\n            onClick: () => {\n              setShowSessionEndedModal(false);\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: () => {\n              navigate('/login');\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 537,\n    columnNumber: 8\n  }, this);\n}\n_s(ArticlesUpdating, \"Dkv+9Br8kJBnu/GlnqyIEKU/+ck=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ArticlesUpdating;\nvar _c;\n$RefreshReg$(_c, \"ArticlesUpdating\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useParams","useLocation","EditorState","convertToRaw","convertFromRaw","UseUserContext","api","FontAwesomeIcon","faUser","faBarsStaggered","faChevronLeft","Modal","transformImage","jsxDEV","_jsxDEV","ArticlesUpdating","_s","navigate","editorState","setEditorState","createEmpty","articleSectionId","setArticleSectionId","articleHeadline","setArticleHeadline","articleToUpdateLoaded","setArticleToUpdateLoaded","loading","user","articleIdToUpdate","articleToUpdate","setArticleToUpdate","awaitingResponse","setAwaitingResponse","isDraft","setIsdraft","articleSections","setArticleSections","isAddingNewCategory","setIsAddingNewCategory","newCategory","setNewCategory","isSidePanelVisible","setIsSidePanelVisible","showSessionEndedModal","setShowSessionEndedModal","isAutoSaving","setIsAutoSaving","userProfilePhoto","setUserProfilePhoto","queryParams","URLSearchParams","search","isRecoverDraft","get","Editor","setEditor","then","module","resizeImages","contentState","images","extractImagesFromContent","updatedContentState","imageSrc","replaceImageInContent","fetchArticleToUpdate","response","console","log","data","article","decodeURIComponent","articleIsDraft","fetchedArticleBody","articleBody","parsedArticleBody","JSON","parse","articleBodyContentState","bodyWithResizedImages","createWithContent","catch","err","autoSaveToLocalStorage","rawContentState","getCurrentContent","serializedContent","stringify","draft","articleId","localStorage","setItem","intervalId","setInterval","clearInterval","storedDraft","getItem","storedArticleBody","handleWindowResize","newWidth","window","innerWidth","addEventListener","removeEventListener","onEditorStateChange","uploadImageToEditor","file","Promise","resolve","reject","reader","FileReader","onloadend","link","result","readAsDataURL","fetchSections","sections","userLevel","replace","uploadImageToCloud","formData","FormData","append","process","env","REACT_APP_CLOUDINARY_UPLOAD_PRESET","res","fetch","REACT_APP_CLOUDINARY_CLOUD__NAME","method","body","ok","json","undefined","secure_url","oldSrc","newSrc","newHeight","newContentState","blockMap","getBlockMap","forEach","block","findEntityRanges","character","entityKey","getEntity","getType","start","end","getEntityAt","entity","src","getData","replaceEntityData","height","width","alignment","contentBlocks","getBlocksAsArray","url","push","prepareArticleExcerpt","rawContentBlocks","blocks","allImages","firstImage","length","firstParagraph","htmlContent","text","trim","calculateReadTime","rawContent","textContent","map","join","wordCount","split","wordsPerMinute","readTimeInMinutes","Math","ceil","addArticle","submitAsDraft","articleExcerpt","encodeURI","imgUrl","post","headers","encodeURIComponent","withCredentials","img","status","removeItem","updateArticle","prevImg","handleSubmit","e","preventDefault","previousImages","uneditedArticleBody","parsedUneditedArticleBody","uploadedUrls","all","includes","imageUrl","tranformedImageUrl","addNewSection","sectionName","sectionId","className","children","id","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","stopPropagation","alt","onSubmit","encType","type","name","placeholder","minLength","required","value","onChange","target","toolbarClassName","wrapperClassName","editorClassName","toolbar","image","uploadCallback","alignmentEnabled","previewImage","present","mandatory","defaultSize","section","index","checked","parseInt","htmlFor","minlength","maxlength","show","centered","Body","_c","$RefreshReg$"],"sources":["/home/remoc-revo/Desktop/git_repo/Blog.1/client/src/pages/articleUpdating.jsx"],"sourcesContent":["import React,{useState,useEffect, useCallback} from \"react\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { EditorState, convertToRaw,convertFromRaw } from 'draft-js';\nimport '../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { UseUserContext } from \"../userContext\";\nimport api from \"../config/api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser,faBarsStaggered, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { Modal } from \"react-bootstrap\";\nimport { transformImage } from \"../reusables/getImage\";\n\nexport default function ArticlesUpdating(){\n   const navigate=useNavigate();\n\n   const [editorState, setEditorState] = useState(EditorState.createEmpty());\n   var [articleSectionId,setArticleSectionId]=useState(27); // default id for uncategoried sections, ensure it's changed\n   var [articleHeadline,setArticleHeadline]=useState('');\n   var [articleToUpdateLoaded, setArticleToUpdateLoaded] = useState(false);\n   const {loading,user} = UseUserContext();\n   let {articleIdToUpdate} = useParams();\n   const [articleToUpdate,setArticleToUpdate] = useState(null);\n   const [awaitingResponse, setAwaitingResponse] = useState(false);\n   const [isDraft, setIsdraft] = useState();\n   const [articleSections, setArticleSections]= useState([]);\n   const [isAddingNewCategory,setIsAddingNewCategory] = useState(false);\n   const [newCategory, setNewCategory] = useState(\"\");\n   const [isSidePanelVisible, setIsSidePanelVisible] = useState(true);\n   const [showSessionEndedModal, setShowSessionEndedModal] = useState(false);\n   const [isAutoSaving, setIsAutoSaving] = useState(true);\n   const [userProfilePhoto, setUserProfilePhoto] = useState(null);\n   const queryParams = new URLSearchParams(useLocation().search);\n   const isRecoverDraft = queryParams.get('recover');\n   const [Editor, setEditor] = useState(null);\n\n   useEffect(() => {\n       import('react-draft-wysiwyg').then((module) => {\n       setEditor(() => module.Editor);\n       });\n   }, []);\n\n   const resizeImages = useCallback((contentState)=>{\n       const images = extractImagesFromContent(contentState);\n       let updatedContentState = contentState;\n\n       for(var imageSrc of images){        \n           // Replace image in content with the resized image\n           updatedContentState = replaceImageInContent(updatedContentState, imageSrc, imageSrc,'400px');             \n       }\n\n       return updatedContentState;\n   },[])\n   \n   function  fetchArticleToUpdate() {\n       api.get(`/single/${articleIdToUpdate}`)\n            .then((response)=>{\n               console.log(\"fetched articleToBeUpdated::\",response)\n               setArticleToUpdate(response.data.article[0]) ;\n\n               setArticleSectionId(articleToUpdate.articleSectionId);\n               setArticleHeadline(decodeURIComponent(articleToUpdate.articleHeadline))\n               setIsdraft(articleToUpdate.articleIsDraft);\n\n               const fetchedArticleBody = response.data.article[0].articleBody;\n               const parsedArticleBody = JSON.parse(fetchedArticleBody);\n               const articleBodyContentState = convertFromRaw(parsedArticleBody);\n               const bodyWithResizedImages = resizeImages(articleBodyContentState);\n               setEditorState(EditorState.createWithContent(bodyWithResizedImages));\n\n               setArticleToUpdateLoaded(true);\n           })\n           .catch((err)=>{\n               console.log(\"get single article error\",err)\n           });\n   }\n\n  useEffect(()=>{\n       if(articleIdToUpdate !== 'null' && ! articleToUpdateLoaded && isRecoverDraft !== 'true'){\n           console.log(\"articleToUpdate not nulll\")\n               fetchArticleToUpdate();\n\n           }\n           \n       }\n   )\n\n\n\n   // useEffect(()=>{\n   //     const autoSaveToServer = ()=>{\n   //         if(!isEditorStateEmpty(editorState) \n   //             && articleHeadline !== '' \n   //             && user !== 'unauthorized')\n   //         { \n   //             console.log(\"Saviing draft again..\", new Date().getSeconds())\n   //             handleSubmit(null, true);\n\n   //             const rawContentState = convertToRaw(editorState.getCurrentContent())\n   //             const serializedContent = JSON.stringify(rawContentState);\n   //             setArticleToUpdate({\n   //                 ...articleToUpdate,\n   //                 articleBody: serializedContent,\n   //                 articleHeadline: articleHeadline,\n   //                 articleSectionId: articleSectionId\n   //             });\n\n   //             console.log(\"The article to update some time in future:\", articleToUpdate)\n   //         }\n   //     }\n\n   //     const intervalId = setInterval(autoSaveToServer, 10000);\n\n   //     return  ()=> clearInterval(intervalId);\n   // })\n\n\n\n   // auto saving to local storage\n   useEffect(()=>{\n       const autoSaveToLocalStorage = ()=>{\n           const rawContentState = convertToRaw(editorState.getCurrentContent())\n           const serializedContent = JSON.stringify(rawContentState);  \n           let draft  =  {\n               articleId: articleIdToUpdate,\n               articleHeadline: articleHeadline,\n               articleBody: serializedContent,\n               articleSectionId: articleSectionId\n           };\n           draft = JSON.stringify(draft);\n           localStorage.setItem('draft',draft );\n       }\n\n       const intervalId = setInterval(autoSaveToLocalStorage, 100);\n\n       return ()=> clearInterval(intervalId);\n   },[articleHeadline,editorState, articleIdToUpdate, articleSectionId])\n\n   //recover draft from storage\n   useEffect(()=>{\n       if(isRecoverDraft && isRecoverDraft === 'true'){\n           let storedDraft = localStorage.getItem('draft');\n           storedDraft = JSON.parse(storedDraft);\n           setArticleToUpdate(storedDraft);\n           let storedArticleBody  = JSON.parse(storedDraft.articleBody);\n           const articleBodyContentState = convertFromRaw(storedArticleBody);\n           const bodyWithResizedImages = resizeImages(articleBodyContentState);\n           setEditorState(EditorState.createWithContent(bodyWithResizedImages));\n           setArticleHeadline(storedDraft.articleHeadline);\n           setArticleSectionId(storedDraft.articleSectionId);\n       }\n   },[isRecoverDraft,resizeImages])\n\n   useEffect(()=>{\n       function handleWindowResize(){\n           const newWidth = window.innerWidth\n\n           if(newWidth < 1200){\n               setIsSidePanelVisible(false);\n           }\n           else{\n               setIsSidePanelVisible(true);\n           }\n       }\n\n       handleWindowResize()\n\n       window.addEventListener('resize',handleWindowResize)\n\n       return ()=>{\n           window.removeEventListener('resize',handleWindowResize)\n       }\n\n   },[])\n\n   // const isEditorStateEmpty = (editorState)=>{\n   //     const contentState = editorState.getCurrentContent();\n   //     const rawContent = convertToRaw(contentState);\n   //     const blocks  = rawContent.blocks;\n\n   //     return blocks.every(block =>{\n   //         const isEmptyText = !block.text.trim();\n   //         const hasNoEntities = block.entityRanges.length === 0;\n   //         return isEmptyText && hasNoEntities;\n   //     });\n   // }\n\n   const onEditorStateChange = (editorState)=>{\n       setEditorState(editorState);\n   }\n\n   const uploadImageToEditor = (file)=>{\n       return new Promise((resolve, reject) => {\n           const reader = new FileReader();\n           reader.onloadend = () => {\n               resolve({ data: { link: reader.result } });\n           };\n           reader.readAsDataURL(file);\n       });\n   }\n\n\n    const fetchSections = useCallback(async()=>{\n       await api.get('/sections')\n           .then((response)=>{\n             setArticleSections(response.data.sections);\n\n           })\n           .catch((err)=>{\n             console.log(\"error fetching sections\", err)\n           });        \n         }\n    ,[])\n\n   useEffect(()=>{\n       if(!loading && user != null){\n           if(user.userLevel !== 1){\n               console.log(\"user current state: \",user);\n               navigate(-1,{replace:true})\n           }\n           \n           setUserProfilePhoto(user.userProfilePhoto);\n           fetchSections();\n\n       }\n\n       \n   },[loading,navigate,user,articleToUpdate, articleToUpdateLoaded,fetchSections])\n   \n\n   async function uploadImageToCloud(imageSrc){\n       console.log(\"uplading to cloud called\");\n\n       if(imageSrc===null){\n           return null;\n       }\n       var formData=new FormData();\n\n       formData.append('file',imageSrc);\n       formData.append('upload_preset',process.env.REACT_APP_CLOUDINARY_UPLOAD_PRESET);\n       console.log(\"the file\",formData)\n\n       try{\n           const res=await fetch(\n               `https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUDINARY_CLOUD__NAME}/image/upload/`,\n                       {\n                           method:\"post\",\n                           body:formData\n                       }\n               )\n           if(res.ok){\n               let data;\n               data  = await res.json()\n               if(data!== undefined){\n                  \n                   console.log(\"\\n secure_url\",data.secure_url)\n                   return data.secure_url\n               }\n           }   \n          \n       }catch(err){\n           console.log(\"file upload err\",err);\n       }\n   }\n\n   const replaceImageInContent = (contentState, oldSrc, newSrc,newHeight) => {\n       let newContentState = contentState;\n       const blockMap = newContentState.getBlockMap();\n   \n       blockMap.forEach((block) => {\n           block.findEntityRanges(\n               (character) => {\n                   const entityKey = character.getEntity();\n                   return (\n                       entityKey !== null &&\n                       newContentState.getEntity(entityKey).getType() === 'IMAGE'\n                   );\n               },\n               (start, end) => {\n                   const entityKey = block.getEntityAt(start);\n                   const entity = newContentState.getEntity(entityKey);\n                   const { src } = entity.getData();\n                   if (src === oldSrc) {\n                       newContentState = newContentState\n                                           .replaceEntityData(entityKey, \n                                               { src: newSrc,\n                                                 height:newHeight,\n                                                 width:'600px',\n                                                 alignment:'left'\n                                               });\n                   }\n               }\n           );\n       });\n   \n       return newContentState;\n   };\n\n   const extractImagesFromContent = (contentState) => {\n       const contentBlocks = contentState.getBlocksAsArray();\n       let images = [];\n       contentBlocks.forEach((block) => {\n           block.findEntityRanges(\n               (character) => {\n                   const entityKey = character.getEntity();\n                   return (\n                       entityKey !== null &&\n                       contentState.getEntity(entityKey).getType() === 'IMAGE'\n                   );\n               },\n               (start, end) => {\n                   const entityKey = block.getEntityAt(start);\n                   const entity = contentState.getEntity(entityKey);\n                   const { src } = entity.getData();\n                   console.log(\"gotten src:\", src,\"the entity type:\", entity.getType(), \"the entity data:\", entity.getData().url)\n                   images.push(src);\n               }\n           );\n       });\n       return images;\n   };\n\n\n   function prepareArticleExcerpt(){\n       const contentState = editorState.getCurrentContent();\n       const rawContentState = convertToRaw(contentState)\n       const rawContentBlocks = rawContentState.blocks;\n       const allImages = extractImagesFromContent(contentState);\n       let firstImage = (allImages.length > 0 )? allImages[0] : null;\n\n       let firstParagraph = null;\n       let htmlContent = ''\n\n       for(let block of rawContentBlocks){\n           if(block.text && block.text.trim().length > 0){\n               firstParagraph = block.text;\n               break;\n           }\n       }     \n\n\n       if(firstImage !== null){\n           htmlContent += `<div id=\"previewImageContainer\" style=\"width: 100%; height: 300px;\">\n                               <img src=\"${firstImage}\" alt=\"\" style=\"width:100%; height:100%; object-fit: cover;\"/>\n                           </div>    \n                           `;\n       }\n\n       if(firstParagraph !== null){\n           htmlContent += `<p>${firstParagraph}</p>`;\n       }\n\n       console.log(\"combined html content\", htmlContent);\n\n       return htmlContent;\n\n   }\n\n   function calculateReadTime(){\n       const rawContent = convertToRaw(editorState.getCurrentContent());\n       const blocks = rawContent.blocks;\n       const textContent = blocks.map(block => block.text).join(' ');\n       const wordCount = textContent.trim().split(/\\s+/).length;\n       const wordsPerMinute = 200;\n       const readTimeInMinutes = Math.ceil(wordCount / wordsPerMinute);\n       return readTimeInMinutes;\n   }\n\n   \n\n   async function addArticle(articleBody,submitAsDraft){\n       let articleExcerpt = prepareArticleExcerpt();\n       const readTimeInMinutes = calculateReadTime();\n\n       console.log(\"encodeURIComponent:\",encodeURI(articleBody).replace(\"'\",\"&apos;\"))\n       console.log(articleBody,\"\\n\",articleHeadline,\"\\n\",articleSectionId,\"\\n\",/*articlePhoto.name.replace(/ /g,\"_\")*/)\n       \n       let imgUrl = null;\n       imgUrl = await uploadImageToCloud();\n       console.log(\"imgUrl\",imgUrl)\n\n       \n       \n       await api.post('/addArticle',\n               {\n                   headers: { 'content-type': 'application/json' },\n                   articleSectionId: articleSectionId,\n                   articleHeadline:encodeURIComponent(articleHeadline).replace(/'/g,\"&apos;\"),\n                   articleBody:articleBody,//encodeURIComponent(articleBody).replace(/'/g,\"&apos;\"),\n                   withCredentials:true,\n                   img:imgUrl,\n                   isDraft: submitAsDraft,\n                   articleExcerpt: articleExcerpt,\n                   readTimeInMinutes: readTimeInMinutes\n               },\n               )\n           .then((response)=>{\n           if(response && response.status===200){\n               const articleId = response.data.articleId;\n               setAwaitingResponse(false);\n               navigate(`/articlePosting/${articleId}`,{replace:true});\n               localStorage.removeItem('draft');\n           }\n           })\n           .catch((err)=>{\n           console.log(err)\n           if(err.response && err.response.status===401){\n               setAwaitingResponse(false);\n               setShowSessionEndedModal(true);\n           }\n           })\n          \n   }\n\n   async function updateArticle(articleBody,submitAsDraft){\n       let articleExcerpt = prepareArticleExcerpt();\n       const readTimeInMinutes = calculateReadTime();\n\n       let imgUrl= null;\n       let prevImg;\n\n   \n       console.log(\"editor state\",editorState)\n\n\n       await api.post('/updateArticle',\n               {\n                   headers: { 'Content-Type': 'application/json' },\n                   withCredentials:true,\n                   articleId: articleToUpdate.articleId,\n                   articleSectionId:articleSectionId,\n                   articleHeadline:encodeURIComponent(articleHeadline).replace(/'/g,\"&apos;\"),\n                   articleBody: articleBody,\n                   img:imgUrl,\n                   prevImg : prevImg,\n                   isDraft:submitAsDraft,\n                   articleExcerpt: articleExcerpt,\n                   readTimeInMinutes: readTimeInMinutes\n               },\n               )\n           .then((response)=>{\n               if(response && response.status===200){\n                   setAwaitingResponse(false);\n                   localStorage.removeItem('draft');\n                   if(!isAutoSaving)fetchArticleToUpdate();\n               }\n           })\n           .catch((err)=>{\n           console.log(err)\n           if(err.response && err.response.status===401){\n               setAwaitingResponse(false);\n               setShowSessionEndedModal(true);\n           }\n           })\n       \n   }\n\n   /*\n       function handleSubmit : extract images, call image upload, call update or add article\n\n       params: e - submit Event\n               submitAsDraft              \n\n   */\n   async function handleSubmit(e, submitAsDraft){\n       if(e) e.preventDefault();\n       \n\n       // Extract images from editor content\n       const contentState = editorState.getCurrentContent();\n       const images = extractImagesFromContent(contentState);\n\n\n       //When Editing an already saved article\n       let previousImages= [];\n       if(articleIdToUpdate !== 'null'){\n           console.log(typeof articleToUpdate,\" article itself\",articleToUpdate.articleBody)\n           const uneditedArticleBody = articleToUpdate.articleBody;\n           const parsedUneditedArticleBody = JSON.parse(uneditedArticleBody);\n           const articleBodyContentState = convertFromRaw(parsedUneditedArticleBody);\n           previousImages = extractImagesFromContent(articleBodyContentState);\n       }\n       \n\n       // Upload each image and replace in content with URL\n       const uploadedUrls = await Promise.all(\n           images.map(async (imageSrc) => {\n               if(previousImages.includes(imageSrc)){\n                   console.log(\"image saved already\")\n                   return null;\n               }\n\n               //upload image  \n               const imageUrl = await uploadImageToCloud(imageSrc);\n\n               const tranformedImageUrl = transformImage(imageUrl);\n\n               // Replace image in content with the uploaded URL\n               const newContentState = replaceImageInContent(contentState, imageSrc, tranformedImageUrl);\n               setEditorState(EditorState.createWithContent(newContentState));\n\n               return imageUrl;\n              \n                  \n           })\n       );\n\n       console.log(\"Uploaded urls\",uploadedUrls)\n\n\n       const rawContentState = convertToRaw(editorState.getCurrentContent())\n       const serializedContent = JSON.stringify(rawContentState);\n\n       console.log(\"Article body: \",serializedContent);\n\n       if(articleToUpdate == null){\n            addArticle(serializedContent,submitAsDraft);\n       }\n       else{\n           updateArticle(serializedContent,submitAsDraft);\n       }\n   }\n   \n  \n   async function addNewSection(){\n       if(newCategory!==\"\"){\n           await api.post('/addSection',{sectionName: newCategory})\n                    .then((response)=>{\n                       setArticleSectionId(response.data.sectionId);\n                       setNewCategory(\"\");\n                       setIsAddingNewCategory(false);\n                       fetchSections();\n                    })\n\n       }\n   }\n\n   return(\n       <div className=\"\" >\n           <div className=\"bg-black m-0  p-1 ps-1 pe-1 ps-md-3 pe-md-4  top-0 w-100 position-fixed\" \n               id=\"writing-nav\"\n              >\n               <div className=\"d-flex justify-content-between\">\n                   <button onClick={()=>{navigate('/')}} className=\"btn d-flex gap-2 align-items-center ms-xl-3\">\n                       <FontAwesomeIcon icon={faChevronLeft} className=\"admin-nav-icon\"/>\n                       <span className=\"text-white\">My home</span>\n                   </button>\n\n                   <div className='d-flex justify-content-end align-items-center gap-2 gap-md-3 '>\n                   \n                   <div style={{backgroundColor:'lightgrey', width:\"24px\",height:\"24px\"}}\n                     className=\"d-flex justify-content-center align-items-center rounded-circle overflow-hidden\"\n                     onClick={(e)=>{e.stopPropagation(); navigate('/profile')}}\n                     >\n                     \n                       {\n                       (userProfilePhoto!==null)\n                           ?<img src={userProfilePhoto} alt=\"\" className=\"w-100 h-100 object-fit-cover rounded-circle\" style={{}}/>\n                           :<FontAwesomeIcon icon={faUser} className=\"ic-white w-100 h-100 pt-2\"/>\n\n                       }\n                   </div>\n                   \n                   <button className=\"btn d-flex\" \n                       onClick={()=>{setIsSidePanelVisible(!isSidePanelVisible)}}\n                       >\n                       <FontAwesomeIcon icon={faBarsStaggered} className=\"admin-nav-icon\"/>\n                   </button>\n               </div>\n               </div>             \n           </div>\n           <div id=\"writing-nav-spacer\"></div>\n           \n           <div id =\"article-update\">\n               <form  onSubmit={handleSubmit} \n                   encType=\"multipart/form-data\" \n                   className=\"mb-5 \" \n                   id = \"article-form\">\n\n                   <div className={`col-xl-9  d-lg-flex justify-content-start`}>\n                   \n                       {/* spacer in xl screens */}\n                       <div className=\"col-xl-2\"></div>\n\n                       <div className=\"col-10 m-xl-0 ms-4 me-4\">\n                           <div className=\"d-flex mt-3 mt-sm-0\">\n                               <input type=\"text\"  name=\"articleHeadline\" className=\"w-100 border-0\" \n                                   id = \"title-input\"\n                                   placeholder=\"Add title...\"  minLength=\"2\"  required value={articleHeadline}\n                                   onChange={(e)=>setArticleHeadline(e.target.value)}\n                               />\n                           </div>\n\n                           {  \n                           Editor !== null &&  \n                           <Editor\n                               editorState={editorState}\n                               onEditorStateChange={onEditorStateChange}\n                               toolbarClassName=\"toolbar col-xl-8 me-xl-5 me-3\"\n                               wrapperClassName=\"wrapper-class \"\n                               editorClassName=\"editor \"\n                               placeholder=\"Type your content here or add images...\"\n                               toolbar={{\n                                   image:{\n                                       uploadCallback:uploadImageToEditor,\n                                       alignmentEnabled: true,\n                                       previewImage :true,\n                                       alt:{\n                                           present:true,\n                                           mandatory:false\n                                       },\n                                       defaultSize:{\n                                           height:'350px',\n                                           width:'400px'\n                                       }\n                                   }\n                               }}\n                           \n                           />}\n                       </div>\n\n\n                   </div>  \n\n                   <div className={`menu ${isSidePanelVisible?\"\":\" d-none\"}`}\n                           id=\"writing-side-panel\" >\n                       <div className=\" border p-3 mb-2\">\n                           <h5 className=\"\">Post</h5>\n                           <span className=\"d-block pb-2\">\n                               <b>Status: </b> \n                               {\n                                   articleToUpdate !== null && !isDraft\n                                   ? <span>Published</span>\n                                   : <span>Draft</span>\n                               }\n                               \n                           </span>\n                           <span className=\"d-block pb-2\">\n                               <b>Visibility: </b> \n                               {\n                                   articleToUpdate !== null && !isDraft\n                                   ? <span>Public</span>\n                                   : <span>Private</span>\n                               }\n                           </span>\n                       \n                       \n                           <div className=\"d-flex gap-2  align-items-center justify-content-between mt-1\" >\n                               {(awaitingResponse && isDraft )\n                                   ?<div className=\"spinner-border text-info\">\n                                       <span className=\"sr-only\">Loading...</span>\n                                   </div>\n                                   \n                                   :<div className=\"col-8\" id=\"save-draft\"> \n                                       <button className=\"btn border\" type=\"submit\"\n                                           onClick={(e)=>{\n                                               setIsdraft(true);\n                                               setAwaitingResponse(true);\n                                               setIsAutoSaving(false);\n                                               handleSubmit(e, true);\n                                               }} >\n                                           <span>Save as a draft</span>\n                                       </button>\n                                   \n                                   </div>\n                               }\n\n                               <div className=\"\">\n                               {(awaitingResponse && !isDraft )\n                                   ?<div className=\"spinner-border text-info col-12\">\n                                       <span className=\"sr-only\">Loading...</span>\n                                   </div>\n                                   \n                                   :<button className=\"btn btn-light col-12\" \n                                       id = \"publish-btn\"\n                                       type=\"submit\" \n                                       onClick={(e)=>{\n                                           setIsdraft(false);\n                                           setAwaitingResponse(true);\n                                           setIsAutoSaving(false);\n                                           handleSubmit(e, false);\n                                       }}\n                                   >                                       \n                                       Publish\n                                   </button>\n                               }\n                               \n                               </div>\n                           </div>\n                       </div>\n                       <div className=\"border p-3 d-flex flex-column\" id=\"category\">\n                           <h5>Category</h5>\n                           <div className=\"mb-3\" id=\"available-categories\">\n                               {articleSections.map((section,index)=>{\n                                   return <div className=\"section pb-2\">\n                                       <input\n                                       type=\"radio\"\n                                       required\n                                       checked={section.sectionId === parseInt(articleSectionId,10)}\n                                       name=\"section\"\n                                       value= {section.sectionId}                               \n                                       id={section.sectionId}\n                                       onChange={(e)=>{setArticleSectionId(e.target.value); }} />\n                                       <label htmlFor={section.sectionId}>{section.sectionName}</label>\n                                   </div>\n                               })\n                           }\n                           \n                           </div>\n                           <div id=\"add-category\">\n                               <button className=\"btn btn-link p-0 mb-3\" id=\"new-category-btn\" type=\"button\" onClick={()=>{setIsAddingNewCategory(true)}}>\n                                   Add New Category\n                               </button>\n\n                               {(isAddingNewCategory)\n                                   ?<div className=\"d-flex flex-column gap-3\">\n                                       <input type=\"text\"  name=\"newCategory\" className=\"w-100 form-control\"\n                                           placeholder=\"New Category name\"  minlength=\"\" maxlength=\"200\" value={newCategory}\n                                           onChange={(e)=>setNewCategory(e.target.value)}\n                                       />\n\n                                       <button className={newCategory===\"\"?\"btn btn-light\": \"btn-ready\"}\n                                           type=\"button\"\n                                           id=\"add-category-btn\"\n                                           onClick={addNewSection}\n                                           >\n                                           Add new category\n                                       </button>\n                                   </div>\n\n                                   :null\n                               }\n                           </div>\n                       </div>\n                       \n                   </div>                    \n                   \n               </form>\n\n           </div>\n\n           <Modal show={showSessionEndedModal} centered>\n               <Modal.Body>\n                   <h6> Your Session has expired!</h6>\n                   <div className=\"d-flex justify-content-between\">\n                       <button className=\"btn btn-light\" onClick={()=>{setShowSessionEndedModal(false)}}>\n                           Close\n                       </button>\n\n                       <button className=\"btn btn-success\" onClick={()=>{navigate('/login')}}>\n                           Login\n                       </button>\n                   </div>\n               </Modal.Body>\n           </Modal>\n           \n           \n       </div>\n   )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}